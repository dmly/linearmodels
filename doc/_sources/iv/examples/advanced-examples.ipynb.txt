{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Further Examples"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Linear Instrumental-Variables Regression\n",
    "**Chapter 6** _Microeconometrics Using Stata_ by Cameron & Trivedi "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import linearmodels as lm\n",
    "from linearmodels import iv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from linearmodels.datasets import meps\n",
    "data = meps.load()\n",
    "data = data.dropna()\n",
    "print(meps.DESCR)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "data.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "controls = ['totchr', 'female', 'age', 'linc','blhisp']\n",
    "print(data[['ldrugexp','hi_empunion'] + controls].describe(percentiles=[]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(data[['ssiratio', 'lowincome', 'multlc', 'firmsz']].describe(percentiles=[]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from statsmodels.api import OLS, add_constant\n",
    "data['const'] = 1\n",
    "controls = ['const'] + controls"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "ivolsmod = iv.IV2SLS(data.ldrugexp, data[['hi_empunion'] + controls], None, None)\n",
    "res_ols = ivolsmod.fit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "ivmod = iv.IV2SLS(data.ldrugexp, data[controls], data.hi_empunion, data.ssiratio)\n",
    "res_2sls = ivmod.fit()\n",
    "print(res_2sls.summary)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 2SLS with homoskedastic errorc\n",
    "ivmod = iv.IV2SLS(data.ldrugexp, data[controls], data.hi_empunion, data[['ssiratio','multlc']])\n",
    "res_2sls_std = ivmod.fit()\n",
    "# 2SLS with heteroskedasticity robust SE\n",
    "ivmod = iv.IV2SLS(data.ldrugexp, data[controls], data.hi_empunion, data[['ssiratio','multlc']])\n",
    "res_2sls_robust = ivmod.fit(cov_type='robust')\n",
    "# GMM\n",
    "ivmod = iv.IVGMM(data.ldrugexp, data[controls], data.hi_empunion, data[['ssiratio','multlc']], weight_type='robust')\n",
    "res_gmm = ivmod.fit()\n",
    "# GMM with clustered standard errors by age\n",
    "ivmod = iv.IVGMM(data.ldrugexp, data[controls], data.hi_empunion, data[['ssiratio','multlc']], weight_type='clustered', clusters=data.age)\n",
    "res_gmm_clustered = ivmod.fit(cov_type='clustered', clusters=data.age)\n",
    "# GMM - continuously updated\n",
    "ivmod = iv.IVGMMCUE(data.ldrugexp, data[controls], data.hi_empunion, data[['ssiratio','multlc']])\n",
    "res_gmm_cue = ivmod.fit(cov_type='robust')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from collections import OrderedDict\n",
    "from linearmodels.iv.results import compare\n",
    "res = OrderedDict()\n",
    "res['OLS'] = res_ols\n",
    "res['2SLS'] = res_2sls\n",
    "res['2SLS-Homo'] = res_2sls_std\n",
    "res['2SLS-Hetero'] = res_2sls_robust\n",
    "res['GMM'] = res_gmm\n",
    "res['GMM Cluster(Age)'] = res_gmm_clustered\n",
    "res['GMM-CUE'] = res_gmm_cue\n",
    "compare(res)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "ivmod = iv.IV2SLS(data.ldrugexp, data[controls], data.hi_empunion, data.ssiratio)\n",
    "res_2sls = ivmod.fit(cov_type='robust')\n",
    "res_2sls.wu_hausman()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "step1 = iv.IV2SLS(data.hi_empunion, data[['ssiratio'] + controls], None, None).fit()\n",
    "resids = step1.resids\n",
    "exog = pd.concat([data[['hi_empunion'] + controls], resids],1)\n",
    "step2 = iv.IV2SLS(data.ldrugexp, exog, None, None).fit(cov_type='robust')\n",
    "print(step2.tstats.residual **2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "res_gmm.j_stat"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "all_instruments = ['ssiratio','lowincome','multlc','firmsz']\n",
    "instruments = data[all_instruments]\n",
    "ivmod = iv.IVGMM(data.ldrugexp, data[controls], data.hi_empunion, instruments, weight_type='robust')\n",
    "res_gmm_all = ivmod.fit(cov_type='robust')\n",
    "res_gmm_all.j_stat"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "data[['hi_empunion'] + all_instruments].corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "od = OrderedDict()\n",
    "for col in all_instruments:\n",
    "    od[col] = iv.IV2SLS(data.ldrugexp, data[controls], data.hi_empunion, data[col]).fit(cov_type='robust')\n",
    "od['OLS'] = res_ols\n",
    "compare(od)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "res_2sls.first_stage"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "ivmod = iv.IV2SLS(data.ldrugexp, data[controls], data.hi_empunion, instruments)\n",
    "res_2sls_all = ivmod.fit(cov_type='robust')\n",
    "res_2sls_all.first_stage"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "ivmod = iv.IVLIML(data.ldrugexp, data[controls], data.hi_empunion, data[['ssiratio','multlc']])\n",
    "res_liml = ivmod.fit(cov_type='robust')\n",
    "compare({'2SLS':res_2sls_robust,'LIML': res_liml, 'GMM': res_gmm})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(res_liml.kappa)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### IV2SLS as OLS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "ivolsmod = iv.IV2SLS(data.ldrugexp, data[['hi_empunion'] + controls], None, None)\n",
    "res_ivols = ivolsmod.fit()\n",
    "sm_ols = res_ols.params\n",
    "sm_ols.name = 'sm'\n",
    "print(pd.concat([res_ivols.params, sm_ols], 1))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
